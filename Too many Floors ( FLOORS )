Chef and Chefina are residing in a hotel.

There are 10 floors in the hotel and each floor consists of 10 rooms.

Floor 1 consists of room numbers 1 to 10.
Floor 2 consists of room numbers 11 to 20.

Floor i consists of room numbers 10⋅(i−1)+1 to 10⋅i.
You know that Chef's room number is X while Chefina's Room number is Y.
If Chef starts from his room, find the number of floors he needs to travel to reach Chefina's room.

Input Format
First line will contain T, number of test cases. Then the test cases follow.
Each test case contains of a single line of input, two integers X,Y the room numbers of Chef and Chefina respectively.
Output Format
For each test case, output the number of floors Chef needs to travel to reach Chefina's room.

Constraints
1≤T≤1000
1≤X,Y≤100
X !=Y
Sample 1:
Input
4
1 100
42 50
53 30
81 80

Output
9
0
3
1




****************************************************************************************************************************************************




/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		// your code goes here
		Scanner s = new Scanner(System.in);
		int t = s.nextInt();
		while(t!=0){
		    double x = s.nextInt();
		    double y = s.nextInt();
		    double xf = Math.ceil(x/10);
		    double yf = Math.ceil(y/10);
		    double val = Math.abs(xf-yf);
		    System.out.println((int)val);
		    t--;
		}
	}
}
