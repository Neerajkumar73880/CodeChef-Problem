Chef has made a list for his monthly expenses. The list has N expenses with index 1 to N. The money spent on each expense depends upon the monthly income of Chef.

Chef spends 50% of his total income on the expense with index 1.
The money spent on the ith expense (i>1)(i>1) is equal to 50\%50% of the amount remaining, after paying for all expenses with indices less than i.
Given that Chef earns 2^X rupees in a month, find the amount he saves after paying for all NN expenses.

Input Format
The first line of input will contain a single integer T, denoting the number of test cases.
Each test case consists of two space-separated integers NN and XX — where NN denotes the number of expenses and 2^X denotes the monthly income of Chef.
Output Format
For each test case, output on a new line, the amount saved by Chef after paying for all N expenses.

Constraints
1≤T≤1000
1≤N<X≤20
Sample 1:
Input
4
1 2
1 3
2 3
3 4

Output
2
4
2
2

Explanation:
Test case 1: The number of expenses are 1 and Chef's monthly income is 2^2 = 4.
Chef spends 50% of his monthly income, that is, 2 on first expense and saves the remaining amount 4−2=2.

Test case 2: The number of expenses are 1 and Chef's monthly income is 2^3 = 8.
Chef spends 50% of his monthly income, that is, 4 on first expense and saves the remaining amount 8−4=4.












***********************************************************************************************************************************************************











/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		// your code goes here
		Scanner s = new Scanner(System.in);
		int t = s.nextInt();
		while(t!=0){
		    int n = s.nextInt();
		    int x = s.nextInt();
		    int val = (int)Math.pow(2,x);
		    while(n!=0){
		        val = val/2;
		        n--;
		    }
		    System.out.println(val);
		    
		    t--;
		}
	}
}
