Your teacher gave you an assignment — given an integer N, construct a binary string B = b1b2b3.....bn of length N such that:

max(bi ,bi+1)=1

for every i from 1 to N−1.

What is the minimum number of 1's such a binary string can contain?

Note: A binary string is a string consisting of only the digits 0 and 1.

Input Format
The first line of input will contain a single integer T, denoting the number of test cases.
Each test case contains a single integer N — the length of binary string you'd like to construct.
Output Format
For each test case, output on a new line the minimum number of 1's required to complete the assignment.

Constraints
1≤T≤1000
2≤N≤1000
Sample 1:
Input
6
6
8
2
3
5
100

Output
3
4
1
1
2
50

Explanation:
Test case 1: One possible binary string is 010101. This has three 1's, and it can be verified that the maximum of any two adjacent characters is 1.
Achieving this with less than three 1's is not possible.













**************************************************************************************************************************************************************















/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		// your code goes here
		Scanner s = new Scanner(System.in);
		int t = s.nextInt();
		while(t!=0){
		    int n = s.nextInt();
		    System.out.println(n/2);
		    
		    t--;
		}
	}
}
